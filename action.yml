name: 'prfindings-action'
description: 'Run prfindings findings processor in Docker'
inputs:
  config_file:
    description: 'Path to config.yml'
    required: true
  env_file:
    description: 'Path to .env file'
    required: false
  output_dir:
    description: 'Output directory on host'
    required: false
    default: ${{ github.workspace }}/prfindings-output
  params_envs:
    description: 'Environment variables in KEY:VALUE format, one per line'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Ensure output directory exists
      shell: bash
      run: mkdir -p "${{ inputs.output_dir }}"
    - name: Run prfindings in Docker
      shell: bash
      env:
        PARAMS_ENVS: ${{ inputs.params_envs }}
      run: |
        # Build up -e env args from params_envs
        ENVS_ARGS=""
        if [ -n "${PARAMS_ENVS}" ]; then
          while read -r line; do
            [ -z "$line" ] && continue
            KEY="${line%%:*}"
            VALUE="${line#*:}"
            ENVS_ARGS="$ENVS_ARGS -e $KEY=$VALUE"
          done <<< "${PARAMS_ENVS}"
        fi

        # Always mount config_file
        MOUNTS="-v ${{ inputs.config_file }}:/app/config.yml"

        # Optionally mount env_file
        if [ -n "${{ inputs.env_file }}" ]; then
          MOUNTS="$MOUNTS -v ${{ inputs.env_file }}:/app/.env"
        fi

        # Always mount output_dir
        MOUNTS="$MOUNTS -v ${{ inputs.output_dir }}:/app/output"

        # Pull image if needed, then run
        docker pull ghcr.io/scribe-security/prfindings:latest
        docker run --rm $ENVS_ARGS $MOUNTS ghcr.io/scribe-security/prfindings:latest python main.py --config /app/config.yml --env-file /app/.env --output-dir /app/output
